/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RequestApplet.java
 *
 * Created on 11/02/2011, 11:16:19 AM
 */

package Applet;

import Applet.utiles.Utiles;
import Applet.utiles.UtilesTrustedX;
import com.isa.SW.exceptions.SWException;
import com.isa.SW.services.ServicioEP;
import com.isa.SW.utils.UtilesSWHelper;
import com.isa.SW.utils.XMLServiceGenerator;
import java.awt.Cursor;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import netscape.javascript.JSObject;

/**
 *
 * @author ISA
 */
public class ModifyPassApplet extends javax.swing.JApplet {

    private String artifact;
    
    /** Initializes the applet RequestApplet */
    @Override
    public void init(){
        UtilesSWHelper.setCodeBase(getCodeBase());
        Utiles.addProvider();
        this.initComponents();
        initPaneles();        
        initButton();
    }
    
    public void initButton(){
        jButton2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2.setBackground( Utiles.getColorHoverButton() );
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2.setBackground( Utiles.getInitColorButton() );
            }
        });          
    }    
    
    private void initPaneles(){
        jPanel2.setVisible(false);
    }
    
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 0, -1, 138));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jButton2.setBackground(new java.awt.Color(57, 155, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Modificar Contraseña");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 155, 255), 5, true));
        jButton2.setBorderPainted(false);
        jButton2.setPreferredSize(new java.awt.Dimension(255, 30));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String passwordAnt = getPasswordAnt();
        String password1 = getPassword();
        String password2 = getPasswordRep();
        
        StringBuilder msjError  = new StringBuilder();
        if (Utiles.isNullOrEmpty(passwordAnt)){
            desplegarError("Contraseña Anterior es un campo obligatorio.");
        }
        else if (Utiles.isNullOrEmpty(password1)){
            desplegarError("Nueva Contraseña es un campo obligatorio.");
        }
        else if (Utiles.isNullOrEmpty(password2)){
            desplegarError("Confirmar Contraseña es un campo obligatorio.");
        }
        else if (!password1.equals(password2)){
            desplegarError("Las contraseñas no coinciden.");
        }
        else if (!Utiles.validarPassword(password2, msjError)){
            this.desplegarError(msjError.toString());
        }
        else{
            String usuario = obtenerUsuario();
            guardarNuevoPassword(usuario, passwordAnt, password2);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    private void guardarNuevoPassword (String usuario, String passwordAnt, String newPassword){
        try {
            abrirBloqueoModal();
            long startTime = System.currentTimeMillis();
            
            artifact = null;
            artifact = UtilesTrustedX.login(usuario, Utiles.convertToSHA256(passwordAnt));
            UtilesTrustedX.modificarPassword(artifact, usuario, Utiles.convertToSHA256( newPassword ));
            UtilesTrustedX.logout(usuario, artifact);
            
            long endTime = System.currentTimeMillis();
            long timeResult = (endTime - startTime);          
            System.out.println("TIEMPO TOTAL MODIFICACION: " + (Utiles.convertTimeMillisToSeconds(timeResult)) + " SEGUNDOS");            
            cerrarBloqueModal();
            desplegarFinalizado();
        } 
        catch (SWException ex) {
            cerrarBloqueModal();
            if (artifact != null){
                try {
                    UtilesTrustedX.logout(usuario, artifact);
                } catch (SWException ex1) {
                    desplegarError(ex1.getMensaje());
                    Logger.getLogger(ModifyPassApplet.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
            Logger.getLogger(ResponseApplet.class.getName()).log(Level.SEVERE, null, ex);
            if (SWException.ERROR_DE_AUTENTICACION.equals(ex.getTipo())){
               desplegarError("La Contraseña Anterior no es correcta.");
            }            
            else{
                desplegarError(ex.getMensaje());
            }
            Logger.getLogger(ModifyPassApplet.class.getName()).log(Level.SEVERE, null, ex);
        }     
        catch (NoSuchAlgorithmException ex){
            cerrarBloqueModal();
            Logger.getLogger(ModifyPassApplet.class.getName()).log(Level.SEVERE, null, ex);
            desplegarError("Error modificando contraseña.");
        }
        catch (IOException ex){
            cerrarBloqueModal();
            Logger.getLogger(ModifyPassApplet.class.getName()).log(Level.SEVERE, null, ex);
            desplegarError("Error modificando contraseña.");
        }        
    }
    
    private String obtenerUsuario(){
        return getParameter("usuario");
    }
    
    private void abrirBloqueoModal(){
        JSObject win = (JSObject) JSObject.getWindow(this);
        win.eval("abrirProcesandoApplet()"); 
    }

    private void cerrarBloqueModal(){
        JSObject win = (JSObject) JSObject.getWindow(this);
        win.eval("cerrarProcesandoApplet()");            
    }    
    
    private void desplegarFinalizado() {
        JSObject win = (JSObject) JSObject.getWindow(this);
        win.eval("desplegarFinalizado()");
    }

    private void desplegarError(String error) {
        JSObject win = (JSObject) JSObject.getWindow(this);
        win.eval("desplegarError(\""+error+"\")");
    } 
    
    private String getPasswordAnt(){
        JSObject win = (JSObject) JSObject.getWindow(this);
        return (String) win.call("getPasswordAnt", null);
    }
    
    private String getPassword() {
        JSObject win = (JSObject) JSObject.getWindow(this);
        return (String) win.call("getPassword",null);
    }
    
    private String getPasswordRep() {
        JSObject win = (JSObject) JSObject.getWindow(this);
        return (String) win.call("getPasswordRep",null);
    }    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
